version: '3.8'

services:
  # Backend Service
  backend:
    image: dungnq2/weather-backend:latest
    container_name: weather-backend
    ports:
      - "8000:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=base64:your-app-key-here
    volumes:
      - backend-storage:/var/www/html/storage
    networks:
      - weather-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/weather/10.98/106.75"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    image: dungnq2/weather-frontend:latest
    container_name: weather-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - weather-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: weather-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - weather-network
    restart: unless-stopped

volumes:
  backend-storage:

networks:
  weather-network:
    driver: bridge
